+*In[1]:*+
[source, ipython3]
----
import yfinance as yf

# Define the ticker symbol for Tesla
ticker_symbol = "TSLA"

# Fetch Tesla stock data
tesla_stock_data = yf.download(ticker_symbol, start="2022-01-01", end="2022-12-31")

# Display the first few rows of the data
print(tesla_stock_data.head())
----


+*Out[1]:*+
----
[*********************100%%**********************]  1 of 1 completed
                  Open        High         Low       Close   Adj Close  \
Date                                                                     
2022-01-03  382.583344  400.356659  378.679993  399.926666  399.926666   
2022-01-04  396.516663  402.666656  374.350006  383.196655  383.196655   
2022-01-05  382.216675  390.113342  360.336670  362.706665  362.706665   
2022-01-06  359.000000  362.666656  340.166656  354.899994  354.899994   
2022-01-07  360.123322  360.309998  336.666656  342.320007  342.320007   

               Volume  
Date                   
2022-01-03  103931400  
2022-01-04  100248300  
2022-01-05   80119800  
2022-01-06   90336600  
2022-01-07   84164700  


----


+*In[2]:*+
[source, ipython3]
----
import yfinance as yf

# Define the ticker symbol for Tesla
ticker_symbol = "TSLA"

# Fetch Tesla stock data
tesla_stock_data = yf.download(ticker_symbol, start="2022-01-01", end="2022-12-31")

# Reset the index of the DataFrame
tesla_stock_data.reset_index(inplace=True)

# Save the DataFrame
tesla_stock_data.to_csv("tesla_stock_data.csv", index=False)

# Display the first five rows of the DataFrame
print(tesla_stock_data.head())
----


+*Out[2]:*+
----
[*********************100%%**********************]  1 of 1 completed
        Date        Open        High         Low       Close   Adj Close  \
0 2022-01-03  382.583344  400.356659  378.679993  399.926666  399.926666   
1 2022-01-04  396.516663  402.666656  374.350006  383.196655  383.196655   
2 2022-01-05  382.216675  390.113342  360.336670  362.706665  362.706665   
3 2022-01-06  359.000000  362.666656  340.166656  354.899994  354.899994   
4 2022-01-07  360.123322  360.309998  336.666656  342.320007  342.320007   

      Volume  
0  103931400  
1  100248300  
2   80119800  
3   90336600  
4   84164700  


----


+*In[7]:*+
[source, ipython3]
----
import requests

url = "https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkPY0220ENSkillsNetwork23455606-2022-01-01"
html_data = requests.get(url).text
----


+*In[11]:*+
[source, ipython3]
----
from bs4 import BeautifulSoup

soup = BeautifulSoup(html_data, 'html5lib')
----


+*In[12]:*+
[source, ipython3]
----
# Step 1: Extract the table with Tesla Quarterly Revenue
tesla_revenue_table = soup.find_all("tbody")[1]

# Step 2: Convert the table to a DataFrame
tesla_revenue = pd.read_html(str(tesla_revenue_table))[0]

# Step 3: Clean and format the data
tesla_revenue.rename(columns={"Tesla Quarterly Revenue (Millions of US $)": "Date", "Tesla Quarterly Revenue (Millions of US $).1": "Revenue"}, inplace=True)
tesla_revenue["Revenue"] = tesla_revenue["Revenue"].str.replace(",|\$", "", regex=True)
tesla_revenue.dropna(inplace=True)
tesla_revenue = tesla_revenue[tesla_revenue["Revenue"] != ""]

# Step 4: Display the last 5 rows of the DataFrame
print(tesla_revenue.tail())
----


+*Out[12]:*+
----
<>:9: SyntaxWarning: invalid escape sequence '\$'
<>:9: SyntaxWarning: invalid escape sequence '\$'
C:\Users\shiva\AppData\Local\Temp\ipykernel_13560\1762918847.py:9: SyntaxWarning: invalid escape sequence '\$'
  tesla_revenue["Revenue"] = tesla_revenue["Revenue"].str.replace(",|\$", "", regex=True)
C:\Users\shiva\AppData\Local\Temp\ipykernel_13560\1762918847.py:9: SyntaxWarning: invalid escape sequence '\$'
  tesla_revenue["Revenue"] = tesla_revenue["Revenue"].str.replace(",|\$", "", regex=True)


    ---------------------------------------------------------------------------

    IndexError                                Traceback (most recent call last)

    Cell In[12], line 2
          1 # Step 1: Extract the table with Tesla Quarterly Revenue
    ----> 2 tesla_revenue_table = soup.find_all("tbody")[1]
          4 # Step 2: Convert the table to a DataFrame
          5 tesla_revenue = pd.read_html(str(tesla_revenue_table))[0]
    

    IndexError: list index out of range

----
